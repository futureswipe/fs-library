@import "fs-tools";

* {
  margin: 0;
  padding: 0;
  list-style-type: none;
  text-decoration: none;
  outline: none 0;
  @include touch-action(manipulation);
  font-family: "Source Sans Pro", -apple-system, BlinkMacSystemFont, "Segoe UI",
  Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-weight: normal;
  border: none;
  background: none;
  @include border-box;

  &, &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button,
  &::-webkit-search-cancel-button,
  &::-webkit-search-results-button {
    -webkit-appearance: none;
    -moz-appearance: textfield;
  }
}

@mixin color-map($colors, $class) {
  @each $name, $color in $colors {
    .#{$class}-#{$name} {
      &, &.btn {
        background: #{$color};
      }

      &.btn {
        &:focus {
          @include boxShadow(0 0 0 .2rem rgba($color, .5));
        }
      }
    }
    @include media(#{$class}-#{$name}) {
      &, &.btn {
        background: #{$color};
      }

      &.btn {
        &:focus {
          @include boxShadow(0 0 0 .2rem rgba($color, .5));
        }
      }
    }
  }
}

@include color-map($blue-gray-color, bg-blue-gray);
@include color-map($cool-gray-color, bg-cool-gray);
@include color-map($gray-color, bg-gray);
@include color-map($true-gray-color, bg-true-gray);
@include color-map($warm-gray-color, bg-warm-gray);
@include color-map($red-color, bg-red);
@include color-map($orange-color, bg-orange);
@include color-map($amber-color, bg-amber);
@include color-map($yellow-color, bg-yellow);
@include color-map($lime-color, bg-lime);
@include color-map($green-color, bg-green);
@include color-map($emerald-color, bg-emerald);
@include color-map($teal-color, bg-emerald);
@include color-map($cyan-color, bg-emerald);
@include color-map($sky-color, bg-emerald);
@include color-map($blue-color, bg-emerald);
@include color-map($indigo-color, bg-emerald);
@include color-map($violet-color, bg-emerald);
@include color-map($purple-color, bg-emerald);
@include color-map($fuchsia-color, bg-emerald);
@include color-map($pink-color, bg-emerald);
@include color-map($rose-color, bg-emerald);


$margin: my, mx, ml, mr, mt, mb;
@each $m in $margin {
  $count: 0;
  @for $i from 0 through 4 {
    .#{$m}-#{$i} {
      @if $count == 0 {
        @include margin($count, $m);
      } @else {
        @include margin(#{$count}rem, $m);
      }
    }
    @if $count==0 {
      @include media(#{$m}-#{$i}) {
        @include margin($count, $m);
      }
    } @else {
      @include media(#{$m}-#{$i}) {
        @include margin(#{$count}rem, $m);
      }
    }
    $count: $count+.25;
  }
}

$padding: py, px, pl, pr, pt, pb;
@each $m in $padding {
  $count: 0;
  @for $i from 0 through 4 {
    .#{$m}-#{$i} {
      @if $count == 0 {
        @include padding($count, $m);
      } @else {
        @include padding(#{$count}rem, $m);
      }
    }
    @if $count==0 {
      @include media(#{$m}-#{$i}) {
        @include padding($count, $m);
      }
    } @else {
      @include media(#{$m}-#{$i}) {
        @include padding(#{$count}rem, $m);
      }
    }
    $count: $count+.25;
  }
}

.container {
  width: 100%;
  @include margin(auto, x);
  @include padding(1 ren, x);
}

@each $name, $m in $media {
  @include media-only($m, $name, container) {
    max-width: #{$m - 18}px;
  }
}

.row {
  display: flex;
  flex-wrap: wrap;
  @include margin(1rem, x);
}

@each $name, $m in $media {
  @include media-only($m, $name, row) {
    display: flex;
    flex-wrap: wrap;
    @include margin(1rem, x);
  }
}

$display: flex, grid, none, inline, block, inline-block;
@each $d in $display {
  .#{$d} {
    display: $d;
  }

  @each $name, $m in $media {
    @include media-only($m, $name, $d) {
      display: $d;
    }
  }
}

.btn {
  @include btn;
}